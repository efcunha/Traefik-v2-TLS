apiVersion: v1
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUdIakNDQlFhZ0F3SUJBZ0lTQTJhdFlEUExPYlFGK0NGanRaOGw1cVZjTUEwR0NTcUdTSWIzRFFFQkN3VUEKTURJeEN6QUpCZ05WQkFZVEFsVlRNUll3RkFZRFZRUUtFdzFNWlhRbmN5QkZibU55ZVhCME1Rc3dDUVlEVlFRRApFd0pTTXpBZUZ3MHlNVEEzTVRreE5EVXlOVGhhRncweU1URXdNVGN4TkRVeU5UWmFNQmd4RmpBVUJnTlZCQU1NCkRTb3VkR05sYlhRdWRHTXVZbkl3Z2dJaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQ0R3QXdnZ0lLQW9JQ0FRQ3EKTytTak5YeUZ0dUx6MFFQOVprbjJadmdzaGduRmthRmhqQTlkd1ZOMUc4ZlhKTDF2TjZVTXJTUUM4c1ZWUG5IUApQbkRSdEpqVG5oY283bFJVV3hoWlpFdzViR0F0WW5VOFV2RGNEK0dReW9qc3VJTHNTaWhoNzBucks1TUdRV3JHCkU4czZHaGJhaWlsdmdJLzhyYVdxUysxOXhOQlA5Z0c3cWFzT1BuT2F4S0dDVWcySkxVWng5OTlXdVg0eS93WEgKUzlDNEhyREhxb1dlUGtxYWJ6NTAxWUs2WTQ2ZVNUQk0zRkh5Z1RwQ3o5Qndnd1RML0RlL1lWeWpSeVFUZzFLQQpmZnBDZXEyeDNReklrSlF6WnJKUkNzdmpBTGJJaGYxYVF4UmltK3ozRUtGU1QzK0JHc21kRTliVHE3bFRET2hECjZCQ0pYSkRPQjF0VFhpRmd2WDZyaWhLdnhtOG5ERTMxOWlGZmozVDJGcCsyYVBYdU1qYUFNY1o0TStDZ0UzelgKTzFlNTQ5Q1k0VnJkQmlMYlBRNWZVL1NWZ2RWL3JoclJPazVkSUpkRkdwaEVydW4rRURuTEVzeWc4MTZ4anQ1OApPWGhsZnd4bFZVeFBGOXFBZEhnSzNkWEhFbTlMVXdLRVMxSmJSQ2NzbmtwMXE2STVVOFRzeTVkcHNtSklEV1IvClhQNEZHLzNnTm9Gb3c4WUFid3Y4OU1RcVJUaUFVdUt3UVpYR2hLdVdOUFdMRk5Rb3NkeU1lNlF5T3B6RWNvYnQKaFhlQmFPWjNoa1kraW5XdmlKT3ZkN045K01NZ2o4USszSGtFZHFmNWphbmxocGRLcm9qSURUbzlTVDZrV05EMwp2ZFNNc3RLeWYxZzBESXVWZ2tiVnBLUDNpbSt4S01PNEppOEVaSjA0N1FJREFRQUJvNElDUmpDQ0FrSXdEZ1lEClZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlYKSFJNQkFmOEVBakFBTUIwR0ExVWREZ1FXQkJSRmpvTlFwZ3NQNGp6SkxITXI4S2dmRWFMTjNEQWZCZ05WSFNNRQpHREFXZ0JRVUxyTVh0MWhXeTY1UUNVRG1INitkaXhUQ3hqQlZCZ2dyQmdFRkJRY0JBUVJKTUVjd0lRWUlLd1lCCkJRVUhNQUdHRldoMGRIQTZMeTl5TXk1dkxteGxibU55TG05eVp6QWlCZ2dyQmdFRkJRY3dBb1lXYUhSMGNEb3YKTDNJekxta3ViR1Z1WTNJdWIzSm5MekFZQmdOVkhSRUVFVEFQZ2cwcUxuUmpaVzEwTG5SakxtSnlNRXdHQTFVZApJQVJGTUVNd0NBWUdaNEVNQVFJQk1EY0dDeXNHQVFRQmd0OFRBUUVCTUNnd0pnWUlLd1lCQlFVSEFnRVdHbWgwCmRIQTZMeTlqY0hNdWJHVjBjMlZ1WTNKNWNIUXViM0puTUlJQkFnWUtLd1lCQkFIV2VRSUVBZ1NCOHdTQjhBRHUKQUhVQWxDQzhIbzdWald5SWN4K0NpeUlzRGRIYVRWNXNUNVE5WWR0T0wxaE5vc0lBQUFGNnYzaHQyUUFBQkFNQQpSakJFQWlCUjU3am9JWmxHeHZQb1crQ1pHMm9Jam50US9RTEVYTUVjajZ1VUlKMm9Hd0lnSFowRzJjRWovalFmCmljeUJuYkNNUWtGZkhtLzlnb2l3M1RockFPdkRveU1BZFFCOVB2TDRqLytJVldna3dzREtubEtKZVN2RkRuZ0oKZnk1cWwyaVpmaUx3MXdBQUFYcS9lRzRBQUFBRUF3QkdNRVFDSUdVVDRPSVl5R0txR2RJNEFzM1l2dHNoWGZ6egp1c3o2dDRGVHU5UVdBcklxQWlBWDhneDlDcHRMNVZCWm9OQ1hUUDZsVjVIOFZMTC92VmpDVld3TXRTUGJWakFOCkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQXNHbHRnZkdJaWZKR2YyWDhSNjQyVnBXbnNaaFhwRTdMQnVzekJXS2wKbmc4MkpOT1FFS2taSy9iSmEvNy9wTXBSUTFGWG9NOEdKbFoyeVpFVEVJY3pVN3RIWkRtT0FQTm8veEtObjVZVQpYVW56U3RtemdxU2NhVGkvVlYrTE9hV1I4c0NmbUo0dmFSdGNPdkJnVitaUVN1aEtRTGZlb3lGeFgwNUxBTWhkCmhiaENuVXN0UTJOS000ZE1RNzlubXVWdm0va2oyaTh4YzFVQ2lFOWZVVzBRRW1idnFRdmc1dHAxTlVwSi9wZkQKekFyQktSSTJNeTRRWS9JQ1RSaU5CWGY2d2pHNjkrcXl0QjVCY2xYdVpNMlIrcHg5R2V0MnAydCtSNE1ZcDRGbApXSFZNT3MrNTVtREtBeVI0UFA2ekxtRmlBclVHeEpWLzhlajkyQkt0V1F5RHdRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRkZqQ0NBdjZnQXdJQkFnSVJBSkVyQ0VyUERCaW5VL2JXTGlXblgxb3dEUVlKS29aSWh2Y05BUUVMQlFBdwpUekVMTUFrR0ExVUVCaE1DVlZNeEtUQW5CZ05WQkFvVElFbHVkR1Z5Ym1WMElGTmxZM1Z5YVhSNUlGSmxjMlZoCmNtTm9JRWR5YjNWd01SVXdFd1lEVlFRREV3eEpVMUpISUZKdmIzUWdXREV3SGhjTk1qQXdPVEEwTURBd01EQXcKV2hjTk1qVXdPVEUxTVRZd01EQXdXakF5TVFzd0NRWURWUVFHRXdKVlV6RVdNQlFHQTFVRUNoTU5UR1YwSjNNZwpSVzVqY25sd2RERUxNQWtHQTFVRUF4TUNVak13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUM3QWhVb3pQYWdsTk1QRXV5TlZaTEQrSUx4bWFaNlFvaW5YU2FxdFN1NXhVeXhyNDVyK1hYSW85Y1AKUjVRVVZUVlhqSjZvb2prWjlZSThRcWxPYnZVN3d5N2JqY0N3WFBOWk9PZnR6Mm53V2dzYnZzQ1VKQ1dIK2pkeApzeFBuSEt6aG0rL2I1RHRGVWtXV3FjRlR6alRJVXU2MXJ1MlAzbUJ3NHFWVXE3WnREcGVsUURScks5TzhadXRtCk5IejZhNHVQVnltWitEQVhYYnB5Yi91QnhhM1NobGc5RjhmbkNidnhLL2VHM01IYWNWM1VSdVBNclNYQmlMeGcKWjNWbXMvRVk5NkpjNWxQL09vaTJSNlgvRXhqcW1BbDNQNTFUK2M4QjVmV21jQmNVcjJPay81bXprNTNjVTZjRwova2lGSGFGcHJpVjF1eFBNVWdQMTdWR2hpOXNWQWdNQkFBR2pnZ0VJTUlJQkJEQU9CZ05WSFE4QkFmOEVCQU1DCkFZWXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0lHQ0NzR0FRVUZCd01CTUJJR0ExVWRFd0VCL3dRSU1BWUIKQWY4Q0FRQXdIUVlEVlIwT0JCWUVGQlF1c3hlM1dGYkxybEFKUU9ZZnI1MkxGTUxHTUI4R0ExVWRJd1FZTUJhQQpGSG0wV2VaN3R1WGtBWE9BQ0lqSUdsajI2WnR1TURJR0NDc0dBUVVGQndFQkJDWXdKREFpQmdnckJnRUZCUWN3CkFvWVdhSFIwY0RvdkwzZ3hMbWt1YkdWdVkzSXViM0puTHpBbkJnTlZIUjhFSURBZU1CeWdHcUFZaGhab2RIUncKT2k4dmVERXVZeTVzWlc1amNpNXZjbWN2TUNJR0ExVWRJQVFiTUJrd0NBWUdaNEVNQVFJQk1BMEdDeXNHQVFRQgpndDhUQVFFQk1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQ0FRQ0Z5azVIUHFQM2hVU0Z2TlZuZUxLWVk2MTFUUjZXClBUTmxjbFF0Z2FEcXcrMzRJTDlmekxkd0FMZHVPL1plbE43a0lKK203NHV5QStlaXRSWThrYzYwN1RrQzUzd2wKaWtmbVpXNC9SdlRaOE02VUsrNVV6aEs4akNkTHVNR1lMNkt2elhHUlNnaTN5TGdqZXdRdENQa0lWejZEMlFRegpDa2NoZUFtQ0o4TXF5SnU1emx6eVpNakF2bm5BVDQ1dFJBeGVrcnN1OTRzUTRlZ2RSQ25iV1NEdFk3a2grQkltCmxKTlhvQjFsQk1FS0lxNFFEVU9Yb1JnZmZ1RGdoamUxV3JHOU1MK0hiaXNxL3lGT0d3WEQ5UmlYOEY2c3c2VzQKYXZBdXZEc3p1ZTVMM3N6ODVLK0VDNFkvd0ZWRE52Wm80VFlYYW82WjBmK2xRS2MwdDhEUVl6azFPWFZ1OHJwMgp5Sk1DNmFsTGJCZk9EQUxadllIN243ZG8xQVpsczRJOWQxUDRqbmtEclFveEIzVXFROWhWbDNMRUtRNzN4RjFPCnlLNUdoRERYOG9WZkdLRjV1K2RlY0lzSDRZYVR3N21QM0dGeEpTcXYzKzBsVUZKb2k1TGM1ZGExNDlwOTBJZHMKaENFeHJvTDErN21yeUlrWFBlRk01VGdPOXIwcnZaYUJGT3ZWMnowZ3AzNVowK0w0V1BsYnVFak4vbHhQRmluKwpIbFVqcjhnUnNJM3FmSk9RRnkvOXJLSUpSMFkvOE9td3QvOG9UV2d5MW1kZUhtbWprN2oxbllzdkM5SlNRNlp2Ck1sZGxUVEtCM3poVGhWMStYV1lwNnJqZDVKVzF6YlZXRWtMTnhFN0dKVGhFVUczc3pnQlZHUDdwU1dUVVRzcVgKbkxSYndIT29xN2hId2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlGWURDQ0JFaWdBd0lCQWdJUVFBRjNJVGZVNlVLNDduYXFQR1FLdHpBTkJna3Foa2lHOXcwQkFRc0ZBREEvCk1TUXdJZ1lEVlFRS0V4dEVhV2RwZEdGc0lGTnBaMjVoZEhWeVpTQlVjblZ6ZENCRGJ5NHhGekFWQmdOVkJBTVQKRGtSVFZDQlNiMjkwSUVOQklGZ3pNQjRYRFRJeE1ERXlNREU1TVRRd00xb1hEVEkwTURrek1ERTRNVFF3TTFvdwpUekVMTUFrR0ExVUVCaE1DVlZNeEtUQW5CZ05WQkFvVElFbHVkR1Z5Ym1WMElGTmxZM1Z5YVhSNUlGSmxjMlZoCmNtTm9JRWR5YjNWd01SVXdFd1lEVlFRREV3eEpVMUpISUZKdmIzUWdXREV3Z2dJaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUNEd0F3Z2dJS0FvSUNBUUN0NkNSejlCUTM4NXVlSzFjb0hJZSszTGZmT0pDTWJqem1WNkI0OTNYQwpvdjcxYW03MkFFOG8yOTVvaG14RWs3YXhZLzBVRW11L0g5THFNWnNoZnRFelBMcEk5ZDE1MzdPNC94THhJWnBMCndZcUdjV2xLWm1ac2ozNDhjTCt0S1NJRzgrVEE1b0N1NGt1UHQ1bCtsQU9mMDBlWGZKbElJMVBvT0s1UENtK0QKTHRGSlY0eUFkTGJhTDlBNGpYc0RjQ0ViZGZJd1BQcVBydDNhWTZ2ckZrL0NqaEZMZnM4TDZQKzFkeTcwc250Swo0RXdTSlF4d2pRTXBvT0ZUSk93VDJlNFp2eEN6U293L2lhTmhVZDZzaHdlVTlHTng3QzdpYjF1WWdlR0pYRFI1CmJIYnZPNUJpZWViYnBKb3ZKc1hRRU9FTzN0a1FqaGI3dC9lbzk4ZmxBZ2VZanpZSWxlZmlONVlOTm5XZSt3NXkKc1IyYnZBUDVTUVhZZ2QwRnRDcldRZW1zQVhhVkNnL1kzOVc5RWg4MUx5Z1hiTktZd2FnSlpIZHVSemU2enF4WgpYbWlkZjNMV2ljVUdRU2srV1Q3ZEp2VWt5UkduV3FOTVFCOUdvWm0xcHpwUmJvWTdubjF5cHhJRmVGbnRQbEY0CkZRc0RqNDNRTHdXeVBudEtIRXR6QlJMOHh1cmdVQk44UTVOMHM4cDA1NDRmQVFqUU1OUmJjVGEwQjdyQk1EQmMKU0xlQ081aW1mV0NLb3FNcGdzeTZ2WU1FRzZLREEwR2gxZ1h4RzhLMjhLaDhoanRHcUVncWlOeDJtbmEvSDJxbApQUm1QNnpqelpON0lLdzBLS1AvMzIrSVZRdFFpMENkZDRYbitHT2R3aUsxTzV0bUxPc2JkSjFGdS83eGs5VE5EClR3SURBUUFCbzRJQlJqQ0NBVUl3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFPQmdOVkhROEJBZjhFQkFNQ0FRWXcKU3dZSUt3WUJCUVVIQVFFRVB6QTlNRHNHQ0NzR0FRVUZCekFDaGk5b2RIUndPaTh2WVhCd2N5NXBaR1Z1ZEhKMQpjM1F1WTI5dEwzSnZiM1J6TDJSemRISnZiM1JqWVhnekxuQTNZekFmQmdOVkhTTUVHREFXZ0JURXA3R2tleXh4Cit0dmhTNUIxLzhRVllJV0pFREJVQmdOVkhTQUVUVEJMTUFnR0JtZUJEQUVDQVRBL0Jnc3JCZ0VFQVlMZkV3RUIKQVRBd01DNEdDQ3NHQVFVRkJ3SUJGaUpvZEhSd09pOHZZM0J6TG5KdmIzUXRlREV1YkdWMGMyVnVZM0o1Y0hRdQpiM0puTUR3R0ExVWRId1ExTURNd01hQXZvQzJHSzJoMGRIQTZMeTlqY213dWFXUmxiblJ5ZFhOMExtTnZiUzlFClUxUlNUMDlVUTBGWU0wTlNUQzVqY213d0hRWURWUjBPQkJZRUZIbTBXZVo3dHVYa0FYT0FDSWpJR2xqMjZadHUKTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBS2N3QnNsbTcvRGxMUXJ0Mk01MW9HclMrbzQ0Ky95UW9ERlZEQwo1V3hDdTIrYjlMUlB3a1NJQ0hYTTZ3ZWJGR0p1ZU43c0o3bzVYUFdpb1c1V2xIQVFVN0c3NUsvUW9zTXJBZFNXCjlNVWdOVFA1MkdFMjRIR050TGkxcW9KRmxjRHlxU01vNTlhaHkyY0kycUJETEtvYmt4L0ozdldyYVYwVDlWdUcKV0NMS1RWWGtjR2R0d2xmRlJqbEJ6NHBZZzFodG1mNVg2RFlPOEE0anF2MklsOURqWEE2VVNiVzFGelhTTHI5TwpoZThZNElXUzZ3WTdiQ2tqQ1dEY1JRSk1FaGc3NmZzTzN0eEUrRmlZcnVxOVJVV2hpRjFteXY0UTZXK0N5QkZDCkRmdnA3T09HQU42ZEVPTTQrcVI5c2Rqb1NZS0VCcHNyNkd0UEFRdzRkeTc1M2VjNQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUpRZ0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQ1N3d2dna29BZ0VBQW9JQ0FRQ3FPK1NqTlh5RnR1THoKMFFQOVprbjJadmdzaGduRmthRmhqQTlkd1ZOMUc4ZlhKTDF2TjZVTXJTUUM4c1ZWUG5IUFBuRFJ0SmpUbmhjbwo3bFJVV3hoWlpFdzViR0F0WW5VOFV2RGNEK0dReW9qc3VJTHNTaWhoNzBucks1TUdRV3JHRThzNkdoYmFpaWx2CmdJLzhyYVdxUysxOXhOQlA5Z0c3cWFzT1BuT2F4S0dDVWcySkxVWng5OTlXdVg0eS93WEhTOUM0SHJESHFvV2UKUGtxYWJ6NTAxWUs2WTQ2ZVNUQk0zRkh5Z1RwQ3o5Qndnd1RML0RlL1lWeWpSeVFUZzFLQWZmcENlcTJ4M1F6SQprSlF6WnJKUkNzdmpBTGJJaGYxYVF4UmltK3ozRUtGU1QzK0JHc21kRTliVHE3bFRET2hENkJDSlhKRE9CMXRUClhpRmd2WDZyaWhLdnhtOG5ERTMxOWlGZmozVDJGcCsyYVBYdU1qYUFNY1o0TStDZ0UzelhPMWU1NDlDWTRWcmQKQmlMYlBRNWZVL1NWZ2RWL3JoclJPazVkSUpkRkdwaEVydW4rRURuTEVzeWc4MTZ4anQ1OE9YaGxmd3hsVlV4UApGOXFBZEhnSzNkWEhFbTlMVXdLRVMxSmJSQ2NzbmtwMXE2STVVOFRzeTVkcHNtSklEV1IvWFA0RkcvM2dOb0ZvCnc4WUFid3Y4OU1RcVJUaUFVdUt3UVpYR2hLdVdOUFdMRk5Rb3NkeU1lNlF5T3B6RWNvYnRoWGVCYU9aM2hrWSsKaW5XdmlKT3ZkN045K01NZ2o4USszSGtFZHFmNWphbmxocGRLcm9qSURUbzlTVDZrV05EM3ZkU01zdEt5ZjFnMApESXVWZ2tiVnBLUDNpbSt4S01PNEppOEVaSjA0N1FJREFRQUJBb0lDQUZNdU50Y0U4SmFKdWJXM1FRTFZzM2hCCjhpd1hScmtTSXMvK1Z4ZlJ1a3p6eVI4NEpaUXRsV2x2UkxSb0djSkFZKzRITGF0YVduNjB0YzViUGp1RjA0MEMKZERodTIwUHg0eVVaeGZWUmtUOWxwNmc3dEVWdkt2SkhzVS9IRiswcms5ZTdua2NDcm40VW1wQ1FPa3NXTW1mVwo5L0hIZEo1TnI2VWFENnBERzh2WkhxNEdGL1VhZVZ5QTZOR0FpOGl4VWdxQzRqYkZVRTRQNVlCZ0lhWDZpNE1kClBPYUVkUkNrNUlQNTk5VE9Ea0ROT0tWeGI2dVl6MGlsYzFXWkVtaXlkMkt2cTlSR0M0OW9Xckc1NjZCK0lzMTAKd0JGb3JPZW9pUlpNeHE0MFVJS2N6cWJnajRYdkorcW40Z1hGMkNWYm5qWm9NNFJiQmFxV2I2cDV5VWR5OEd4bgpaQUNaaUFKQVRTRnVXZVFpcWFHaXRiYXhuWjkrSnFDSDRmZVpIMGVudFg4UG9EYlRSTEcwTytWcmNwaUpST21zCk1xQzRXRG1hK2NwR2crSkRwSkYrQmhiSHAvRis2QTg5bmdWWTJtcENBcTh5R0E4VW5IVnZQa05RYmdkcU9xZjQKWXROVTdjNnlNQnhCVEpEMHhQK0FnenZyVzdoVCtBQTVqVENmb1BLY2hsWllVVGs0UkU3YXl0TDNJekxkVktERAprQ0tiTE04dnB5UnhxUXNyalpGb2ZzRXdVZC9tUDcxZVVxaVAwSGxxdTVGMFNWUEJkaGJtOUJwRkNCRUxOZVdNCnVyYTZTZnBVZ3VkNjA3cGZkaXZNSGl3U3FjTkpVTFZWUWhyRDhuVEdJWjJhWXZ2RzlNb0x1WVo2Rml2MlpSY3UKRnJFVENlRU5XVGx3OHdVMUlMc2hBb0lCQVFEU0lNejVOY050OE9NNWdVTDdUT090S1c3dWt6aTRVaVIwOXhHVQo3QVhJUmg3TFpEbU9MNTZIUkc1b0VDdERxVlphbTZnUnN5czdSSVBSd21PWnFtZDh2RG5ZVk83YlRjZW1qRDhhCnYrSEMxWFFadkVMQi9WVG1TNW12MlkvalNNang3emFNNzl5NXEyVzJXMW1nek5DQzgrbDhBS0JkZ0FmTFh6SWEKUkhmVjFmMVdiOXNQUXMrd1JPenkwOHhESVVDUThpMFRpVnFiVVZSOGpvSjJEK3pKWmdCUXYwSTBKdW90bS83dwpVazdVcU5UaE5KL1puWGNDRkxndmJ6MDNub3JGM3JOVzJQaEhHQzVwTXc3SzNXSWRzWG5La3pEQWE0OEptWUhiCjZES09pazNnaFVZemFCYWE0Q2xFRVh6V1h5T0crMjhoQzRIbUtxQmRQQndWT2FkWkFvSUJBUURQWlpJa3MwK3QKcjN6ejN3TzRYVWQvdzJGc3ZxNlNKMVFwdEROWVZkQ0srNUtqdGphNE02b3JqRnV0SkZ6aURFQlhZYUpHdVd2egpPTC9tVDZUUzN6d0NFQmd3enNDeVJIUGZaQUZBcXQvSU9QU2t6QmRBM3kyaGlYQVpPYjE1U2dsaXdzYkoxdXlVCm1leUV3dzdGSFBJZGFTT0hUcDZoNVNkZmEzdWdjeXlRRit3VWhFbDh1ZHMvOWhxcm1vZmlGZ2d5cWhhZkR1aFoKZHY0ZVdDTVhqRGVhLzAvdmhad09PWHB4NlBlOHVuTDRDdmw1SkZuSGJBdkJobnhvM2xqRnV1cEVoQU9SU2ZyQwp2QWx1K0lCeEdlaVJtanNqZ01HUG4wS1RXRllDOXVBYkxMMkRyR1FpQmVXM0hPbjhYTW4rMmw5ci9ydk5DRGZOCjN5Zis5RkF0b3orMUFvSUJBQUhxMXJQM2I1OFRNWitXdEZ2Q3Fka3NwWng3cjJyUEpSSUVKeDdxd0dyQmFRcUcKRVpoZ2l0dkZIaFRKQVB3UEVZQ21KdlJ5WkJTWVhYT09pSVlnYmUxUGNsK3M5cmo5anJMUVdNc1BzU21yOVBFLwpMSVRFb1ArdzlPZ0wzaW8rd2NhalhpWVBFajZIZDlnZ0lVTThXeksyc3d5MG5NSDlweFNOKzlFTml1SmluM3NvCmJpRkhoTW1nOTJDSDJqZEttR0k2TTNzWUo4Ri9EbnhNZUpoSE1PdnRpRmMwUjVCZVFvakVBYUdEdnNCbUFmdEUKRmFsUXJJTlNXUlBsdWZORitSSXhKQVhJMlFzZEIxOWlYZUl2L3ZNeWFXQVYwNzROdlRKak9qSWRma2lhcm5jOApBQlg3L3lqT250SEdMeE50cnM5T2dBY1hLY3BGM1V5OGZhMGI1NUVDZ2dFQkFKQjBENEdPZnkzYmNDMndKTGd5CkNFM2QrU3F6K1lXRTdTTUxCMFE4cVQ5VWtFT0U4OElEQWtESXgwWG1jT2RsWHg4OXVyaUdCOEZsd291WTU1V1UKdFFnK3k0cWJSeTRqYlkybjZ4TnVzT1dWZmhpV3FvK2RvdnZEYlplMFZ0dDNET2lELzgrdjZpSnF2NG1ORHVtTwpDcmtmZFFhV1pQa2dVZmN0TnZOL3BRZE1FandNRTk5UzJIcEpZVFFyTXYvdkZwQ3JWWXc5NXVvQmJtZ1dQWUwyClAvaXVZYS9VSU9qcmNmU0xMcHArUnZ1ck1TNEdlcDNqREtFam1kMjFHS0hJV2NtVkphTDVvellsb0hCeGw0eXYKWGdTa0p4TElhSWt2aFVCNW81YjIrd3NTYzRHVi9qeVFYUHJZb2NVTG9BbnBjZE1YbnhqazQzRjZRREpkV3NjZQowSTBDZ2dFQWJBRTVFaXViU2xENkdJdVdaRnkyWUkrTmZZSUNzVWZCWlp0ejVOWVpQUGVLeUdHYmNCZHBCVTFNCkhNZkhIVENLcS9FYkF1R01lSU04T1ZUTDlCSmUxTUpNeERqcDFlZFZZT3ZuNlArczNvRWNaemVrWTRnK0R0ZjYKb0FFQnR4dXpLU25BbnhyeTU0c3k5WEF4UXI5WWNTVXU1QlplNFRCRlB3WTJ6SldERC9HY3ZqZXlUR1M5MnhvQwppUkNoUDhUM1hYS0lqbnRBT0x4VDlaeHVpTHcxSk5NTWNaMmsvZ2xiU1ZmV2JkNm42RUN0QWRVellyQ05jbnRTCnQvbENRZ05kMUFTRjU5SmR5Y2JTeTRlR2x6Vm5tWW5oUGFlazZRZ25Fd3c2eDlxRDRKU2NOcHEvRDJtN2hNMUcKaWl2TWdWK2NtVEJUQ1QzN1dWQStrTkQ5b3JGenNnPT0KLS0tLS1FTkQgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  creationTimestamp: "2021-07-19T15:54:45Z"
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:data:
        .: {}
        f:tls.crt: {}
        f:tls.key: {}
      f:type: {}
    manager: kubectl-create
    operation: Update
    time: "2021-07-19T15:54:45Z"
  name: traefik-cert
  namespace: kube-system
  resourceVersion: "1797675"
  uid: bd5d1536-dbbb-4d57-a0ae-f5662dc30c1f
type: Opaque

